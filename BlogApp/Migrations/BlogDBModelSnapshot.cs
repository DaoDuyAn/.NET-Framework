// <auto-generated />
using System;
using BlogApp.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogApp.Migrations
{
    [DbContext(typeof(BlogDB))]
    partial class BlogDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("BlogApp.Model.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<long>("IdCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Article");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Nghỉ học nhé jeje",
                            DateCreated = new DateTime(2023, 11, 25, 14, 25, 18, 254, DateTimeKind.Local).AddTicks(8022),
                            IdCategory = 1L,
                            Title = "Thông báo nghỉ lụt"
                        });
                });

            modelBuilder.Entity("BlogApp.Model.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2023, 11, 25, 14, 25, 18, 254, DateTimeKind.Local).AddTicks(7898),
                            Name = "Thông báo"
                        },
                        new
                        {
                            Id = 2L,
                            DateCreated = new DateTime(2023, 11, 25, 14, 25, 18, 254, DateTimeKind.Local).AddTicks(7909),
                            Name = "Thông báo 2"
                        },
                        new
                        {
                            Id = 3L,
                            DateCreated = new DateTime(2023, 11, 25, 14, 25, 18, 254, DateTimeKind.Local).AddTicks(7910),
                            Name = "Thông báo 3"
                        },
                        new
                        {
                            Id = 4L,
                            DateCreated = new DateTime(2023, 11, 25, 14, 25, 18, 254, DateTimeKind.Local).AddTicks(7911),
                            Name = "Thông báo 4"
                        });
                });

            modelBuilder.Entity("BlogApp.Model.Article", b =>
                {
                    b.HasOne("BlogApp.Model.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogApp.Model.Category", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
